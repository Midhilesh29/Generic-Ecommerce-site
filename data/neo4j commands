match (n) detach delete n

load csv with headers from "file:///product_name.csv" as row merge (p:Product {id:toInteger(row.Id),name:row.name,rating:toFloat(row.ratings),stocksAvailable:toFloat(row.stocks_available),Tag:(row.Tag)}) return count(p)

load csv with headers from "file:///user_name.csv" as row merge (u:User {id:toInteger(row.Id),name:row.name}) return count(u)

load csv with headers from "file:///manufacturer.csv" as row merge (m:Manufacturer {id:toInteger(row.Id),name:row.name}) return count(m)

load csv with headers from "file:///manufacturer.csv" as row match (m:Manufacturer {id:toInteger(row.Id),name:row.name}) match (p:Product {name:row.produced}) merge (m)-[r:manufactured]->(p) return count(r)

load csv with headers from "file:///product_person.csv" as row match (u:User {name:row.user}) match (p:Product {name:row.product}) merge (u)-[s:bought {rating:p.rating}]->(p) return count(s)

merge(t:Tag {id:1,name:"Art"})
merge(t:Tag {id:2, name:"Games"})
merge(t:Tag {id:3, name:"Toys"})
merge(t:Tag {id:4, name:"Fancy"})

load csv with headers from "file:///product_name.csv" as row match(p:Product {name:row.name}) match(t:Tag {name:row.Tag}) merge (p)-[r:belongs_to]->(t) return count(r) 

